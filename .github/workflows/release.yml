name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      
      - name: Restore pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create release PR
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          commit: 'chore(release): version packages'
          title: 'chore: release new version'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version from package.json
        id: version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Read Changelog from Changesets
        id: changelog
        run: |
          if [ -f ".changeset/release.md" ]; then
            echo "changelog<<EOF" >> $GITHUB_ENV
            cat .changeset/release.md >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "changelog=No changelog available." >> $GITHUB_ENV
          fi

      - name: Create ZIP Archive
        run: |
          zip -r release.zip . -x "*.git*" "node_modules/*" "*.DS_Store"

      - name: Create GitHub Release and Upload ZIP  # âœ… Use extracted version & changelog
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.version }}  # âœ… Uses extracted version for tag
          name: Release v${{ env.version }}  # âœ… Uses extracted version for release name
          body: |
            ðŸš€ **New Release v${{ env.version }}**
            
            ${{ env.changelog }}  # âœ… Uses extracted changelog from `.changeset/release.md`
          files: release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}